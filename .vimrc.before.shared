call janus#disable_plugin('buffergator')
call janus#disable_plugin('snipmate')
"call janus#disable_plugin('supertab')

set mouse=a

" Use git ls-files for Ctrl+P
let g:ctrlp_working_path_mode = 'r'
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\.git$\|\.hg$\|\.svn$',
    \ 'file': '\.exe$\|\.so$\|\.dll$' }

let g:ctrlp_user_command = {
    \ 'types': {
        \ 1: ['.git', 'cd %s && git ls-files . --cached --exclude-standard --others'],
        \ 2: ['.hg', 'hg --cwd %s locate -I .'],
    \ },
    \ 'fallback': 'find %s -type f'
\ }

let g:airline_powerline_fonts = 1

" Highlight line and cursor
set cursorline
"set cursorcolumn

" Highlight word under cursor like IDEs
"autocmd! CursorMoved * exe printf('match IncSearch /\V\<%s\>/', escape(expand('<cword>'), '/\'))

" https://github.com/klen/python-mode#settings
"let g:pymode = 1
let g:pymode_doc = 0
"let g:pymode_run = 1
"let g:pymode_lint = 1
let g:pymode_rope = 0
let g:pymode_folding = 0
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
"let g:python_highlight_all = 1
"let g:pymode_syntax_highlight_self = g:pymode_syntax_all
let g:pymode_lint_write = 0
"let g:pymode_lint_checker = "pyflakes"

" Highlighting for .pys files (used in Plex)
autocmd BufNewFile,BufEnter *.pys set ft=python
"autocmd filetype python syn keyword pythonBuiltinObj self cls

set shiftwidth=2
set softtabstop=2
set background=dark
set noshowmode
set iskeyword=@,48-57,_,192-255,-

" Indent Guides
"let g:indent_guides_start_level = 3
"let g:indent_guides_guide_size = 1
"let g:indent_guides_enable_on_vim_startup = 1
"let g:indent_guides_color_change_percent = 5

" Indent Lines
let g:indentLine_enabled = 1
let g:indentLine_faster = 1
"let g:indentLine_char = '┆'

" Highlight over 80 characters
set colorcolumn=80

" No bells
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

"set list listchars=tab:▷⋅,trail:⋅,nbsp:⋅

" YouCompleteMe
let g:ycm_collect_identifiers_from_comments_and_strings = 1
let g:ycm_server_log_level = 'debug'
let g:ycm_complete_in_comments = 1
"let g:ycm_filetype_whitelist = { 'cs': 1 }
"let g:ycm_filetype_specific_completion_to_disable = { 'cs': 1 }
let g:ycm_collect_identifiers_from_tags_files = 1
"let g:ycm_key_invoke_completion = '<S-Tab>'
"let g:ycm_key_invoke_completion = '<c-space>'
"set completeopt-=preview

nnoremap <C-]> :execute 'tj' expand('<cword>')<CR>zv

filetype plugin on
set omnifunc=syntaxcomplete#Complete
"if has("autocmd") && exists("+omnifunc")
  "autocmd Filetype *
        "\ if &omnifunc == "" |
        "\   setlocal omnifunc=syntaxcomplete#Complete |
        "\ endif
"endif

" SuperTab
"let g:SuperTabDefaultCompletionType = "<C-X><C-O>"
let g:SuperTabDefaultCompletionType = "context"
let g:SuperTabCompletionContexts = ['s:ContextText', 's:ContextDiscover']
let g:SuperTabContextTextOmniPrecedence = ['&omnifunc', '&completefunc']
let g:SuperTabContextDiscoverDiscovery =
    \ ["&completefunc:<c-x><c-u>", "&omnifunc:<c-x><c-o>"]

" Add cwd to vim python path
python <<EOF
import sys
import vim
sys.path.insert(0, vim._getcwd())
EOF
