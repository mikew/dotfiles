# git
alias g="git"
alias gci='git commit'
alias gco='git checkout'
alias gst='git status'
alias gdi='git diff'
alias gfa='git fetch --all'

# git pendantic
alias gs='gst'
alias gd='gdi'

# Git commit message, an alias won't do
gcm () {
  local message=$*
  git commit --message "$message"
}

# Git clean WARNING!
git_clean_all () {
  git_reset_file .
  git clean -df .
}

git_reset_file () {
  local filename="$1"
  git reset HEAD "$filename"
  git checkout -- "$filename"
}

gcl () {
  local filename="$1"
  if [[ -n "$filename" ]]; then
    git_clean_all
  else
    git_reset_file "$filename"
  fi
}

git-new-branch() {
  # Grab branch name from arguments. If it's empty, default to something unique.
  local branch_name="$1"
  if [ -z "$branch_name" ]; then
    branch_name="new-branch-$(date +%s)"
  fi

  # Try to stash any changes, and track if anything was actually stashed so we
  # only call `stash apply` when needed.
  local did_stash=""
  local old_stash=$(git rev-parse -q --verify refs/stash)
  git stash
  local new_stash=$(git rev-parse -q --verify refs/stash)
  if [ "$old_stash" != "$new_stash" ]; then
    did_stash="yes"
  fi

  git checkout master || git checkout main
  git fetch --all
  git pull origin master || git pull origin main
  git checkout -b "$branch_name"

  if [ -n "$did_stash" ]; then
    git stash apply
  fi
}

# vim: ft=sh
