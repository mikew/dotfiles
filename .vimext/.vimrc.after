Bundle 'godlygeek/tabular'
Bundle 'Yggdroot/indentLine'
Bundle 'hynek/vim-python-pep8-indent'
Bundle 'HTML-AutoCloseTag'
Bundle 'spf13/vim-preview'
Bundle 'tpope/vim-repeat'
Bundle 'hail2u/vim-css3-syntax'
Bundle 'spf13/PIV'
Bundle 'ekalinin/Dockerfile.vim'
Bundle 'leafgarland/typescript-vim'
Bundle 'ternjs/tern_for_vim'
Bundle 'editorconfig/editorconfig-vim'
Bundle 'digitaltoad/vim-jade'
Bundle 'klen/python-mode'
Bundle 'Valloric/YouCompleteMe'
Bundle 'SirVer/ultisnips'
Bundle 'honza/vim-snippets'
Bundle 'jistr/vim-nerdtree-tabs'
Bundle 'bronson/vim-trailing-whitespace'
Bundle 'mbbill/undotree'
Bundle 'Raimondi/delimitMate'
Bundle 'bling/vim-airline'
Bundle 'YankRing.vim'
" hand-picked from dotvim/vundles.vim
  Bundle 'scrooloose/nerdtree'
""Bundle 'tpope/vim-repeat'
""Bundle 'AutoClose'
  Bundle 'kien/ctrlp.vim'
"Bundle 'rodjek/vim-puppet'
  Bundle 'tpope/vim-fugitive'
  Bundle 'mileszs/ack.vim'
  Bundle 'scrooloose/syntastic'
  Bundle 'majutsushi/tagbar'
"Bundle 'Indent-Guides'
"Bundle 'zhaocai/GoldenView.Vim'
"let g:goldenview__enable_default_mapping=0

" Janus
  Bundle 'ap/vim-css-color'
  Bundle 'easymotion/vim-easymotion'
  Bundle 'tpope/vim-endwise'
  Bundle 'tpope/vim-eunuch'
  Bundle 'sjl/gundo.vim'
  Bundle 'michaeljsmith/vim-indent-object'
  Bundle 'edsono/vim-matchit'
  Bundle 'terryma/vim-multiple-cursors'
  Bundle 'scrooloose/nerdcommenter'
  Bundle 'tpope/vim-surround'
  Bundle 'airblade/vim-gitgutter'
  Bundle 'vim-scripts/vimwiki'
  Bundle 'thinca/vim-visualstar'

" TODO needed?
  Bundle 'itspriddle/ZoomWin'
  Bundle 'rgarver/Kwbd.vim'
  Bundle 'MarcWeber/vim-addon-mw-utils'
  Bundle 'tomtom/tlib_vim'
  Bundle 'tpope/vim-unimpaired'
  Bundle 'chrisbra/NrrwRgn'

" Languages
  Bundle 'tpope/vim-cucumber'
  Bundle 'mustache/vim-mustache-handlebars'
  Bundle 'tpope/vim-rails'
  Bundle 'tpope/vim-markdown'
  Bundle 'elzr/vim-json'
  Bundle 'kchmck/vim-coffee-script'
  Bundle 'chrisbra/csv.vim'
  Bundle 'tpope/vim-git'
  Bundle 'pangloss/vim-javascript'
  Bundle 'mmalecki/vim-node.js'
  Bundle 'vim-ruby/vim-ruby'
  Bundle 'cakebaker/scss-syntax.vim'

" self
  Bundle 'ervandew/supertab'

" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" better key bindings for UltiSnipsExpandTrigger
"let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"
let g:UltiSnipsExpandTrigger = "<nop>"
let g:ulti_expand_or_jump_res = 0
function ExpandSnippetOrCarriageReturn()
  let snippet = UltiSnips#ExpandSnippetOrJump()
  if g:ulti_expand_or_jump_res > 0
    return snippet
  else
    return "\<CR>"
  endif
endfunction
"inoremap <expr> <CR> pumvisible() ? "\<C-R>=ExpandSnippetOrCarriageReturn()\<CR>" : "\<CR>"

let g:endwise_no_mappings = 1
inoremap <expr> <C-X><CR> pumvisible() ? "\<C-R>=ExpandSnippetOrCarriageReturn()\<CR>" : "\<CR>\<C-R>=EndwiseAlways()\<CR>"
inoremap <expr> <CR> pumvisible() ? "\<C-R>=ExpandSnippetOrCarriageReturn()\<CR>" : "\<CR>\<C-R>=EndwiseDiscretionary()\<CR>"
